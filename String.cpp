//****************************************************************************
//
//
//
//****************************************************************************


 
 
// ===========================================================================
//                                   Libraries
// ===========================================================================



// ===========================================================================
//                                 Project Files
// ===========================================================================
#include "String.h"




//############################################################################
//                                                                           #
//                           Class String                                    #
//                                                                           #
//############################################################################

// ===========================================================================
//                         Definition of static attributes
// ===========================================================================

// ===========================================================================
//                                  Constructors
// ===========================================================================
String:: String(void)
{
	length =4;
	_string = NULL;
	capacity = 0;
}

String ::String (const String& str)
{

	length = str.size();
	//_string = str.c_string();
	capacity = str.Get_capacity();
	
}

String::String(char* c_string)
{
}

// ===========================================================================
//                                  Destructor
// ===========================================================================
String::~String(void)
{
  delete _string;
  _string = NULL;
  length = 0;
  capacity = 0;
}

// ===========================================================================
//                                 Public Methods
// ===========================================================================


		int String :: size(void) const{
			return length;
		}

		int String :: Get_capacity (void) const{
			return capacity;
		}

		int String :: empty(int length){
			if(length==0){
				return 0;
			}if (length!=0){
				return 1;
			}
		}


		void String :: clear(void)
		{
			length = 0;
		}


		//const char* String ::  c_str() const {

		//int i;		
		//char * cstr = new char [new_chaine.size() + 2];

		//for (i=0; i<new_chaine.size ;i++);
		//new_chaine.
		


// ===========================================================================
//                                Protected Methods
// ===========================================================================

// ===========================================================================
//                               Non inline accessors
// ===========================================================================
